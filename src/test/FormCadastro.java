/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test;

import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author thiag
 */
public class FormCadastro extends javax.swing.JFrame {

    /**
     * Creates new form FormCadastro
     */
    List<OS> osS;
    public FormCadastro() throws ParseException {
        initComponents();
        var telefoneMask = new MaskFormatter("##-#####-####");
        var cpfMask = new MaskFormatter("###.###.###-##");
        txtTelefone.setFormatterFactory(new DefaultFormatterFactory(telefoneMask));
        txtCPF.setFormatterFactory(new DefaultFormatterFactory(cpfMask));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblNome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNome = new javax.swing.JTextPane();
        lblCPF = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        lblEmail = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEmail = new javax.swing.JTextPane();
        btnCadastrar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOS = new javax.swing.JTable();
        radioCPF = new javax.swing.JRadioButton();
        radioCNPJ = new javax.swing.JRadioButton();
        btnCadastrarOS = new javax.swing.JButton();
        btnVerificaCliente = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNome.setText("Nome");

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtNome);

        lblCPF.setText("CPF/CNPJ");

        lblTelefone.setText("Telefone");

        txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCPFKeyPressed(evt);
            }
        });

        txtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefoneActionPerformed(evt);
            }
        });

        lblEmail.setText("Email");

        jScrollPane2.setViewportView(txtEmail);

        btnCadastrar.setEnabled(false);
        btnCadastrar.setLabel("Cadastrar Cliente");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        tblOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OS Nº", "Nº SÉRIE", "DESCRIÇÃO", "STATUS", "DATA DA OS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOS.setShowGrid(true);
        tblOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOSMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblOS);
        if (tblOS.getColumnModel().getColumnCount() > 0) {
            tblOS.getColumnModel().getColumn(2).setMinWidth(500);
        }

        radioCPF.setSelected(true);
        radioCPF.setText("CPF");
        radioCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCPFActionPerformed(evt);
            }
        });

        radioCNPJ.setText("CNPJ");
        radioCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCNPJActionPerformed(evt);
            }
        });

        btnCadastrarOS.setText("Cadastrar OS");
        btnCadastrarOS.setEnabled(false);
        btnCadastrarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarOSActionPerformed(evt);
            }
        });

        btnVerificaCliente.setText("Verificar Cliente");
        btnVerificaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificaClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioCNPJ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerificaCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCadastrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCadastrarOS))
                            .addComponent(lblEmail))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblEmail)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnCadastrar)
                                    .addComponent(btnCadastrarOS))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(lblTelefone)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnVerificaCliente))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(lblCPF)
                            .addComponent(radioCPF)
                            .addComponent(radioCNPJ))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefoneActionPerformed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtNomeKeyPressed

    private void txtCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar() == KeyEvent.VK_TAB){
            SQL sql = new SQL();
            boolean registered = sql.isRegistered(txtCPF.getText());
            
            if(txtCPF.getText().length() == 11 && registered || txtCPF.getText().length() == 14 && registered){
                Cliente cliente = new Cliente();
                cliente.locateData(txtCPF.getText());
                txtNome.setText(cliente.Nome);
                txtEmail.setText(cliente.Email);
                txtTelefone.setText(cliente.Telefone);
                btnCadastrarOS.setEnabled(true);
            }
            else if(txtCPF.getText().length() < 11 || txtCPF.getText().length() > 14){
                System.err.println("CPF/CNPJ Inválido");
                //System.err.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Digite um CPF/CNPJ Válido","Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(!registered)
            {
                btnCadastrar.setEnabled(true);
                System.err.println("CPF/CNPJ Não Cadastrado");
                //System.err.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "CPF/CNPJ Informado não está cadastrado","Cadastro Não Realizado", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtCPFKeyPressed

    private void radioCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCNPJActionPerformed
        // TODO add your handling code here:
        radioCPF.setSelected(false);
        MaskFormatter cnpjMask = new MaskFormatter();
        try {
            cnpjMask = new MaskFormatter("##.###.###/####-##");
        } catch (ParseException ex) {
            Logger.getLogger(FormCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtCPF.setFormatterFactory(null);
        txtCPF.setFormatterFactory(new DefaultFormatterFactory(cnpjMask));
        
    }//GEN-LAST:event_radioCNPJActionPerformed

    private void radioCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCPFActionPerformed
        // TODO add your handling code here:
        radioCNPJ.setSelected(false);
        MaskFormatter cpfMask = new MaskFormatter();
        try {
            cpfMask = new MaskFormatter("###.###.###-##");
        } catch (ParseException ex) {
            Logger.getLogger(FormCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtCPF.setFormatterFactory(null);
        txtCPF.setFormatterFactory(new DefaultFormatterFactory(cpfMask));
    }//GEN-LAST:event_radioCPFActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        
        Cliente cliente = new Cliente();
        cliente.setCPFCNPJ(txtCPF.getText());
        cliente.setEmail(txtEmail.getText());
        cliente.setNome(txtNome.getText());
        cliente.setTelefone(txtTelefone.getText());
        if(cliente.insertClient()){
            btnCadastrarOS.setEnabled(true);
        }
        
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnVerificaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificaClienteActionPerformed
        // TODO add your handling code here:
        SQL sql = new SQL();
            boolean registered = sql.isRegistered(txtCPF.getText());
            
            if(txtCPF.getText().length() == 11 && registered || txtCPF.getText().length() == 14 && registered){
                Cliente cliente = new Cliente();
                cliente.locateData(txtCPF.getText());
                txtNome.setText(cliente.Nome);
                txtEmail.setText(cliente.Email);
                txtTelefone.setText(cliente.Telefone);
                btnCadastrarOS.setEnabled(true);
            }
            else if(txtCPF.getText().length() < 11 || txtCPF.getText().length() > 14){
                System.err.println("CPF/CNPJ Inválido");
                //System.err.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Digite um CPF/CNPJ Válido","Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(!registered)
            {
                btnCadastrar.setEnabled(true);
                System.err.println("CPF/CNPJ Não Cadastrado");
                //System.err.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "CPF/CNPJ Informado não está cadastrado","Cadastro Não Realizado", JOptionPane.INFORMATION_MESSAGE);
            }
            
            
            if(registered)
            {
                OS os = new OS();
                OcorrenciasOS ocorrencia = null;
                
                osS = os.getOS(txtCPF.getText());
                DefaultTableModel model = (DefaultTableModel) tblOS.getModel();
                
                
                for(int i = 0; i < osS.size();i++){
                    OS o = osS.get(i);
                    o.getOcorrencias(o.osN);
                    if(!o.ocorrencias.isEmpty()){
                        ocorrencia = o.ocorrencias.get(o.ocorrencias.size() - 1);
                    }                  
                    
                    
                    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                    
                    int lastStatus = o.ocorrencias.get(o.ocorrencias.size()-1).idStatus;
                    
                    Status st = new Status();
                    st.getStatus();
                    
                  model.addRow(new Object[]{o.osN, o.nSerie, o.descricaoProblema, st.status.get(lastStatus).descStatus,df.format(os.data)});
                }
                
                
            }
    }//GEN-LAST:event_btnVerificaClienteActionPerformed

    
    
    
    private void btnCadastrarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarOSActionPerformed
        // TODO add your handling code here:
        
        FormCadastroOS cadastroOS = new FormCadastroOS();
        cadastroOS.cpfCNPJ = this.txtCPF.getText();
        cadastroOS.setVisible(true);
    }//GEN-LAST:event_btnCadastrarOSActionPerformed

    private void tblOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOSMouseClicked
        // TODO add your handling code here:
        
       int index = tblOS.getSelectedRow();
       OS o = osS.get(index);
       
        try {
            FormOcorrenciaOS formOcorrencia = new FormOcorrenciaOS();
            formOcorrencia.nOS = o.osN;
            formOcorrencia.populaOcorrencias();
            //formOcorrencia.setVisible(true);
            formOcorrencia.show();
        } catch (ParseException ex) {
            Logger.getLogger(FormCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tblOSMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormCadastro().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(FormCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCadastrarOS;
    private javax.swing.JButton btnVerificaCliente;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JRadioButton radioCNPJ;
    private javax.swing.JRadioButton radioCPF;
    private javax.swing.JTable tblOS;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextPane txtEmail;
    private javax.swing.JTextPane txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
